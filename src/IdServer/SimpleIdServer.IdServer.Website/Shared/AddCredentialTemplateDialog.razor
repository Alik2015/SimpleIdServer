
<RadzenSteps>
    <Steps>
        <RadzenStepsItem Text="Credential template type">
            <div class="row gy-4">
                @foreach (var appType in CredentialTemplateTypes)
                {
                    <div class="col-md-6">
                        <RadzenCard @onclick="() => SelectCredentialTemplate(appType)" class="@(SelectedCredentialTemplate != null && SelectedCredentialTemplate.Name == appType.Name ? "selected selectable" : "selectable")">
                            <div>
                                <h5>@appType.Name</h5>
                                <p class="text-muted">@(new MarkupString(appType.ShortDescription))</p>
                            </div>
                        </RadzenCard>
                    </div>
                }
            </div>

            <hr />

            @if (SelectedCredentialTemplate != null)
            {
                <h5><RadzenIcon Icon="info" /> @SelectedCredentialTemplate.Name</h5>
                <p class="text-muted">@(new MarkupString(SelectedCredentialTemplate.Description))</p>
            }
        </RadzenStepsItem>
        <RadzenStepsItem Text="Properties" Disabled="@(SelectedCredentialTemplate == null)">
            @if(SelectCredentialTemplate != null)
            {
                switch(SelectedCredentialTemplate.Type)
                {
                    case SimpleIdServer.Vc.Constants.CredentialTemplateProfiles.W3CVerifiableCredentials:
                        <RadzenTemplateForm Submit=@AddW3CCredentialTemplate TItem="W3CCredentialTemplate" Data=@w3cCredentialTemplate>

                        </RadzenTemplateForm>
                        break;
                }
            }
        </RadzenStepsItem>
    </Steps>
</RadzenSteps>

@code {
    record CredentialTemplateType
    {
        public string Name { get; set; } = null!;
        public string ShortDescription { get; set; } = null!;
        public string Description { get; set; } = null!;
        public string Type { get; set; }
    }

    record W3CCredentialTemplate
    {
        public string Id { get; set; }
        public string Type { get; set; }
    }

    W3CCredentialTemplate w3cCredentialTemplate = new W3CCredentialTemplate();

    ICollection<CredentialTemplateType> CredentialTemplateTypes { get; set; } = new List<CredentialTemplateType>
    {
        new CredentialTemplateType { Name = "jwt_vc_json", ShortDescription = "W3C Verifiable Credential <a href='https://www.w3.org/TR/vc-data-model/#what-is-a-verifiable-credential' target='_blank'>https://www.w3.org/TR/vc-data-model/#what-is-a-verifiable-credential</a>", Description = "Verifiable credentials represent statements made by an issuer in a tamper-evident and privacy-respecting manner.", Type = SimpleIdServer.Vc.Constants.CredentialTemplateProfiles.W3CVerifiableCredentials }
    };

    CredentialTemplateType? SelectedCredentialTemplate { get; set; } = null;

    void SelectCredentialTemplate(CredentialTemplateType credentialTemplate)
    {
        SelectedCredentialTemplate = credentialTemplate;
    }

    void AddW3CCredentialTemplate()
    {
        
    }
}