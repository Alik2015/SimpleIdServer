@using SimpleIdServer.IdServer.Website.Stores.RealmStore;
@inherits Fluxor.Blazor.Web.Components.FluxorLayout
@inject IState<RealmsState> state
@inject ContextMenuService contextMenuService
@inject IDispatcher dispatcher
@inject DialogService dialogService
@inject NavigationManager Navigation

<PageTitle>SimpleIdServer Administration UI</PageTitle>

<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<RadzenLayout class="rz-shadow-3">
    <RadzenHeader>
        <div class="d-flex align-items-center">
            <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
            <RadzenImage Path="_content/SimpleIdServer.IdServer.Website/images/SIDLogo.svg" Style="width: 40px" />
            <RadzenText Style="margin: 0" Text="SimpleIdServer" TextStyle="TextStyle.DisplayH6" />
        </div>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebarExpanded">
        <RadzenPanelMenu Click="@(args => ShowRealms(args))">
            <RadzenPanelMenuItem Text=@("Active Realm : " + activeRealm) />
            <RadzenPanelMenuItem Text="Manage" />
            <RadzenPanelMenuItem Text="Clients" Icon="apps" Path="/clients" />
            <RadzenPanelMenuItem Text="Scopes" Icon="visibility" Path="/scopes" />
            <RadzenPanelMenuItem Text="Users" Icon="person" Path="/users" />
            <RadzenPanelMenuItem Text="Groups" Icon="group" Path="/groups" />
            <RadzenPanelMenuItem Text="Credential templates" Icon="wallet" Path="/credentialtemplates" />
            <RadzenPanelMenuItem Text="Configure" />
            <RadzenPanelMenuItem Text="Identity Provisioning" Icon="accessibility" Path="/identityprovisioning" />
            <RadzenPanelMenuItem Text="Identity Providers" Icon="people" Path="/idproviders" />
            <RadzenPanelMenuItem Text="Authentication Context" Icon="security" Path="/acrs" />
            <RadzenPanelMenuItem Text="Certificate Authorities" Icon="shield" Path="/certificateauthorities" />
            <RadzenPanelMenuItem Text="Ethereum networks" Icon="currency_bitcoin" Path="/ethrnetworks" />
            <RadzenPanelMenuItem Text="Auditing" Icon="source" Path="/auditing" />
            <RadzenPanelMenuItem Text="Sign out" Icon="logout" Path="/logout" />
        </RadzenPanelMenu>
        <div class="p-2">
            Sidebar
        </div>
    </RadzenSidebar>
    <RadzenBody>
        <div class="p-2">
            @Body
        </div>
    </RadzenBody>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;
    string activeRealm;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if(firstRender)
        {
            var act = new GetAllRealmAction();
            dispatcher.Dispatch(act);
            SubscribeToAction<GetActiveSuccessRealmAction>((act) =>
            {
                activeRealm = act.Realm;
                StateHasChanged();
            });
            SubscribeToAction<SelectRealmSuccessAction>((act) =>
            {
                activeRealm = act.Realm;
                StateHasChanged();
            });
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        dispatcher.Dispatch(new GetActiveRealmAction());
    }

    async void ShowRealms(MenuItemEventArgs args)
    {
        if (state.Value.IsLoading || args.Text != "Active Realm : " + activeRealm) return;
        await dialogService.OpenAsync<SelectRealmDialog>("Select Realm", new Dictionary<string, object>
        {
            { "activeRealm", activeRealm }
        }, new DialogOptions
        {
            Width = "700px",
            Height = "512px",
            Resizable = true,
            Draggable = true
        });
    }
}