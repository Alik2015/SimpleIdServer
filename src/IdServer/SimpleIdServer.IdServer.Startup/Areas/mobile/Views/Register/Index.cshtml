@using Microsoft.Extensions.Options;
@using SimpleIdServer.IdServer.Options;
@using SimpleIdServer.IdServer.Startup.Resources;
@model SimpleIdServer.IdServer.Fido.UI.ViewModels.RegisterMobileViewModel;

@inject IOptions<IdServerHostOptions> configuration

@{
    Layout = "~/Views/Shared/_RegisterLayout.cshtml";
    ViewBag.Title = AuthenticateMobileResource.register_title;
}

<div id="registrationContainer">
    <ul class="list-group mb-3" id="errors">
        @if (!ViewData.ModelState.IsValid)
        {
            @foreach (var modelState in ViewData.ModelState.Values)
            {
                foreach (var error in modelState.Errors)
                {
                    <li class="list-group-item list-group-item-danger">@AuthenticateWebauthnResource.ResourceManager.GetString(error.ErrorMessage)</li>
                }
            }
        }
    </ul>

    <!-- Registration form -->
    <form id="registerMobile">
        <div class="input-group mb-3">
            <input asp-for="Login" placeholder="@AuthenticateWebauthnResource.login" type="text" class="form-control" />
        </div>
        <div class="input-group mb-3">
            <input asp-for="DisplayName" placeholder="@AuthenticateWebauthnResource.display_name" type="text" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary card-link">@AuthenticateMobileResource.generate_qrcode</button>
    </form>

    <!-- QR Code-->
    <div id="qrCode" style="display: none; text-align: center;">
        <h3>@AuthenticateMobileResource.scan_mobileapp</h3>
        <img src="#" style="max-width:280px;"/>
    </div>
</div>

<div class="alert alert-success" id="registerSuccessMessage" style="display: none;">
    @AuthenticateWebauthnResource.credential_added
</div>

@section SubScripts {
    <script type="text/javascript">
        $(document).ready(function() {
            var beginRegisterUrl = "@Model.BeginRegisterUrl";
            var registerStatusUrl = "@Model.RegisterStatusUrl";

            var toggleBtn = function(isDisabled) {
                $("#registerWebauthn button[type='submit']").attr('disabled', isDisabled);
            }

            var displayError = function(errorJson) {
                console.error(errorJson);
                $("#errors").empty();
                $("#errors").append("<li class='list-group-item list-group-item-danger'>" + errorJson["error_description"] + "</li>");
            }

            var displaySuccessMessage = function () {
                $("#registerSuccessMessage").css('display', '');
                $("#registrationContainer").css('display', 'none');
            }

            var displayQRCode = function(img) {
                $("#registerMobile").css("display", "none");
                $("#qrCode").css("display", "");
                $("#qrCode img").attr("src", img);
            }

            async function checkStatus(sessionId) {
                setTimeout(async function(){
                    let response = await fetch(registerStatusUrl + "/" + sessionId, {
                        method: 'GET'
                    });
                    if (!response.ok) {
                        let responseJson = await response.json();
                        displayError(responseJson);
                        await checkStatus(sessionId);
                        return;
                    }

                    displaySuccessMessage();
                }, 1000);
            }

            async function makeCredential(login, displayName, form) {
                toggleBtn(true);

                let response = await fetch(beginRegisterUrl, {
                    method: 'POST',
                    body: JSON.stringify({ login: login, display_name: displayName }),
                    headers: {
                        "Accept": "application/json",
                        "Content-Type": "application/json"
                    }
                });

                if(!response.ok) {
                    let responseJson = await response.json();
                    toggleBtn(false);
                    displayError(responseJson);
                    return;
                }
                
                const sessionId = response.headers.get('SessionId');
                const blob = await response.blob();
                const img = URL.createObjectURL(blob);

                displayQRCode(img);
                await checkStatus(sessionId);
            };

            $("#registerMobile").submit(function (e) {
                e.preventDefault();
                var login = $("#registerMobile input[name='Login']").val();
                var displayName = $("#registerMobile input[name='DisplayName']").val();
                makeCredential(login, displayName, convertFormToJSON($(e.target)));
            });
        });
    </script>
}